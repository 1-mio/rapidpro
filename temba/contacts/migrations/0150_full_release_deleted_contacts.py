# Generated by Django 4.0.2 on 2022-02-15 20:41

from django.db import migrations


def full_release_deleted_contacts(apps, schema_editor):  # pragma: no cover
    Contact = apps.get_model("contacts", "Contact")
    Ticket = apps.get_model("tickets", "Ticket")

    tickets_contact_ids = Ticket.objects.all().values_list("contact_id", flat=True)

    deleted_contacts = Contact.objects.filter(id__in=tickets_contact_ids, is_active=False, name=None)

    for contact in deleted_contacts:
        contact.ticket_events.all().delete()

        for ticket in contact.tickets.all():
            ticket.broadcasts.update(ticket=None)
            ticket.delete()

        # release our messages
        for msg in contact.msgs.all():
            msg.delete()

        # any urns currently owned by us
        for urn in contact.urns.all():
            # release any messages attached with each urn,
            # these could include messages that began life
            # on a different contact
            for msg in urn.msgs.all():
                msg.delete()

            # same thing goes for connections
            for conn in urn.connections.all():
                for log in conn.channel_logs.all():
                    log.delete()
                if conn.session:
                    for run in conn.session.runs.all():
                        run.delete()
                    conn.session.delete()
                conn.delete()

            urn.delete()

        # release our channel events
        for event in contact.channel_events.all():  # pragma: needs cover
            event.delete()

        # release our runs too
        for run in contact.runs.all():
            run.delete()

        # release our runs too
        for run in contact.runs.all():
            run.delete()

        for session in contact.sessions.all():
            session.delete()

        for conn in contact.connections.all():  # pragma: needs cover
            for log in conn.channel_logs.all():
                log.delete()
            if conn.session:
                for run in conn.session.runs.all():
                    run.delete()
                conn.session.delete()
            conn.delete()

        # and any event fire history
        contact.campaign_fires.all().delete()

        # take us out of broadcast addressed contacts
        for broadcast in contact.addressed_broadcasts.all():
            broadcast.contacts.remove(contact)


def reverse(apps, schema_editor):  # pragma: no cover
    pass


def apply_manual():  # pragma: no cover
    from django.apps import apps

    full_release_deleted_contacts(apps, schema_editor=None)


class Migration(migrations.Migration):

    dependencies = [
        ("contacts", "0149_populate_current_flow"),
    ]

    operations = [migrations.RunPython(full_release_deleted_contacts, reverse)]
