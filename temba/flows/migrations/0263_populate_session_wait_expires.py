# Generated by Django 3.2.9 on 2022-01-05 21:13

from django.db import migrations, transaction
from django.db.models import Q


def do_populate(FlowSession, FlowRun):
    num_updated = 0

    while True:
        with transaction.atomic():
            # get a batch of waiting sessions which don't have wait_started_on or wait_expires_on set
            batch = list(
                FlowSession.objects.filter(status="W")
                .filter(Q(wait_started_on__isnull=True) | Q(wait_expires_on__isnull=True))
                .only("id", "wait_started_on", "wait_expires_on")[1000]
            )
            if not batch:
                break

            session_ids = [s.id for s in batch]
            waiting_runs = FlowRun.objects.filter(status="W", session_id__in=session_ids).only(
                "session", "modified_on", "expires_on"
            )
            waiting_runs_by_session = {r.session_id: r for r in waiting_runs}

            for session in batch:
                waiting_run = waiting_runs_by_session.get(session)
                if not waiting_run:
                    print(f"waiting session #{session.id} has no waiting run, ignoring")

                if not session.wait_started_on:
                    session.wait_started_on = waiting_run.modified_on
                if not session.wait_expires_on:
                    session.wait_expires_on = waiting_run.expires_on

                session.save(update_fields=("wait_started_on", "wait_expires_on"))

            num_updated += len(batch)
            print(f" > updated {num_updated} flow sessions")


def populate_session_wait(apps, schema_editor):
    FlowSession = apps.get_model("flows", "FlowSession")
    FlowRun = apps.get_model("flows", "FlowRun")
    do_populate(FlowSession, FlowRun)


def reverse(apps, schema_editor):
    pass


def apply_manual():
    from temba.flows.models import FlowSession, FlowRun

    do_populate(FlowSession, FlowRun)


class Migration(migrations.Migration):

    dependencies = [
        ("flows", "0262_auto_20220103_1945"),
    ]

    operations = [migrations.RunPython(populate_session_wait, reverse)]
