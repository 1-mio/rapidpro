-extends "smartmin/list.html"
-load smartmin sms contacts temba
-load i18n humanize

-block page-title
  -if current_group
    {{current_group.name}}
  -else
    {{title}}

-block page-top

-block title-icon
  %span.title-icon
    .glyph.icon-users

-block content

  #pjax.page-content
    -block pjax
      .lp-frame
        -if org_perms.contacts.contact_import
          .left
            .button-primary{ onclick:"goto(event)", href:"{% url 'contacts.contact_import' %}"}
              -trans "Import Contacts"

            .lp-nav.upper
              -for folder in folders
                .lp-nav-item{'class': '{% if request.path == folder.url %}font-normal{% endif %}' }
                  .name{onclick:"goto(event)", href:'{{folder.url}}'}
                    {{folder.label}}
                  .count{onclick:"goto(event)", href:'{{folder.url}}'}
                    {{ folder.count | intcomma }}

            .lp-nav.lower
              .font-normal.uppercase.text-xs.text-gray-500.pb-1
                - trans "Groups"
              .inner-scroll
                -for group in groups

                  .px-2.mt-1{'class': '{% if current_group.id == group.pk %}font-normal{% endif %}' }
                    .flex.linked
                      .text{onclick:"goto(event)", href:'{% url "contacts.contact_filter" group.uuid %}'}
                        {{group.label}}
                      .text-right.flex-grow{onclick:"goto(event)", href:'{% url "contacts.contact_filter" group.uuid %}'}
                        {{ group.count | intcomma }}
                      -if not group.is_ready
                        %i.spin.icon-loop

            .mt-2.flex-grow
              -if org_perms.contacts.contact_create
                %temba-modax#create-label-modal{ header:'{% trans "Create Contact" %}', endpoint:"{% url 'contacts.contact_create' %}"}
                  .button-light.mb-3
                    - trans "Create Contact"

              -if org_perms.contacts.contactgroup_create
                %temba-modax#create-group-modal{ header:'{% trans "Create Group" %}', endpoint:"{% url 'contacts.contactgroup_create' %}", onloaded: "handleCreateGroupModalLoaded", onsubmitted: "handleCreateGroupModalSubmitted"}
                  .button-light.mb-3
                    - trans "Create Group"

          .right
            %form#search-form{method:"get"}
              %temba-textinput.w-full{onsubmit:'document.querySelector("#search-form").submit();', placeholder:'{% trans "Search" %}', name:"search", value:"{{search}}"}

            -if has_contacts
              -block contacts-list
                .flex.w-full.mb-1.py-2

                  -block action-buttons
                    -if org_perms.contacts.contact_update
                      .list-buttons-container.h-full.mt-2.mr-2.flex-grow
                        .list-buttons.flex.items-center.-mx-2.h-full
                          -if 'block' in actions
                            .btn-group.mx-2
                              .object-btn-block
                                .button-light.text-gray-500.p-icon
                                  .flex.items-center
                                    .-mt-1.mr-2.glyph.icon-user-block{style:"width:16px"}
                                    .text-gray-600
                                      -trans "Block"

                          - if 'unblock' in actions
                            .btn-group.mx-2
                              .object-btn-unblock
                                .button-light.text-gray-500.p-icon
                                  .flex.items-center
                                    .-mt-1.mr-2.glyph.icon-user-block{style:"width:16px"}
                                    .text-gray-600
                                      -trans "Unblock"

                          - if 'unstop' in actions
                            .btn-group.mx-2
                              .object-btn-unstop
                                .button-light.text-gray-500.p-icon
                                  .flex.items-center
                                    .-mt-1.mr-2.glyph.icon-user{style:"width:16px"}
                                    .text-gray-600
                                      -trans "Unstop"

                          - if 'delete' in actions
                            .btn-group.mx-2
                              .object-btn-delete
                                .button-light.text-gray-500.p-icon
                                  .flex.items-center
                                    .-mt-1.mr-2.glyph.icon-user-delete{style:"width:16px"}
                                    .text-gray-600
                                      -trans "Delete"

                          - if 'unlabel' in actions
                            .btn-group.mx-2
                              .button-light.text-gray-500.p-icon{onclick:'unlabelObjectRows({{current_group.pk}});'}
                                .flex.items-center
                                  .-mt-1.mr-2.glyph.icon-user-remove{style:"width:16px"}
                                  .text-gray-600
                                    -trans "Remove From Group"

                          - if 'label' in actions
                            .btn-group.mx-2
                              .button-light.text-gray-500.p-icon.dropdown-toggle{data-toggle:"dropdown", data-trigger:'hover', data-delay:"800", data-placement:'top', data-original-title:'{% trans "Labels" %}'}
                                .flex.items-center
                                  .-mt-1.mr-2.glyph.icon-users-2{style:"width:16px"}
                                  .text-gray-600
                                    -trans "Groups"
                              %ul.dropdown-menu.label-menu.rounded-lg.border-none.px-4.py-3
                                -for group in groups
                                  -if not group.is_dynamic
                                    %li
                                      .lbl-menu{'href':'#', onclick:'addContactToGroup({{group.pk}})', data-id:'{{group.pk}}'}
                                        .flex.items-center.py-1.linked
                                          .glyph.message-label.label-checkbox
                                          .name.px-2
                                            {{ group.label }}
                                - if org_perms.contacts.contactgroup_create
                                  - if groups
                                    %li.separator.-mx-4.border-b.my-3
                                  %li
                                    .lbl-menu.add-group.linked{ onclick:"handleAddGroupClicked()" }
                                      - trans "New Group..."

                          - if org_perms.msgs.broadcast_send and not reply_disabled
                              %temba-modax#send-message-modal{ header:'{% trans "Send Message" %}', endpoint:"{% url 'msgs.broadcast_send' %}" }
                                .btn-group.mx-2
                                  .button-light.text-gray-500.p-icon{onclick:"handleSendMessageClicked()"}
                                    .flex.items-center
                                      .-mt-1.mr-2.glyph.icon-bubble-3{style:"width:16px"}
                                      .text-gray-600
                                        -trans "Send Message"

                    .flex-grow.page-title.text-3xl.text-gray-700.mt-2.ml-2.leading-none.self-center
                      .flex.flex-col
                        .title
                          -if current_group
                            {{current_group.name}}
                          -else
                            {{title}}

                        -if search_error
                          .search-details
                            %span.search-error
                              =search_error
                        -elif search
                          .search-details.text-base.leading-relaxed
                            -blocktrans with results_count=paginator.count|intcomma count cc=paginator.count
                              Found {{ results_count }} contact matching <i>{{search}}</i>.
                              -plural
                                Found {{ results_count }} contacts matching <i>{{search}}</i>.

                    .ml-4
                      -include "gear_links_include.haml"


                %table.object-list
                  %tr.contacts
                    - if org_perms.contacts.contact_update
                      %th.px-6.py-3.pt-4.border-b.border-gray-200.bg-gray-100.text-left.font-medium.uppercase.text-xs.tracking-wider

                    %th.px-6.py-3.pt-4.border-b.border-gray-200.bg-gray-100.text-left.font-medium.uppercase.text-xs.tracking-wider
                    %th.px-6.py-3.pt-4.border-b.border-gray-200.bg-gray-100.text-left.font-medium.uppercase.text-xs.tracking-wider
                    -for field in contact_fields
                      -if field.show_in_table
                        %th.px-6.py-3.pt-4.border-b.border-gray-200.bg-gray-100.text-left.font-medium.uppercase.text-xs.tracking-wider
                          -if sort_field == field.key
                            -if sort_direction == 'desc'
                              %a{href:"?sort_on={{ field.key }}{% if search %}&search={{ search|escape }}{% endif %}"}
                                %div
                                  {{ field.label }}
                                  %span.sort.icon.icon-arrow-down-2.sort-asc.visible
                            -else
                              %a{href:"?sort_on=-{{ field.key }}{% if search %}&search={{ search|escape }}{% endif %}"}
                                %div
                                  {{ field.label }}
                                  %span.sort.icon.icon-arrow-up51.sort-desc.visible
                          -else
                            %a{href:"?sort_on=-{{ field.key }}{% if search %}&search={{ search|escape }}{% endif %}"}
                              %div
                                {{ field.label }}
                                %span.sort.icon.icon-arrow-down-2.sort-desc
                    %th.px-6.py-3.pt-4.border-b.border-gray-200.bg-gray-100.text-left.font-medium.uppercase.text-xs.tracking-wider
                      - if object_list
                        -if sort_field == 'created_on'
                          -if sort_direction == 'desc'
                            %a{href:"?sort_on=created_on{% if search %}&search={{ search|escape }}{% endif %}"}
                              %div
                                -trans "Created On"
                                %span.sort.icon.icon-arrow-down-2.sort-asc.visible
                          -else
                            %a{href:"?sort_on=-created_on{% if search %}&search={{ search|escape }}{% endif %}"}
                              %div
                                -trans "Created On"
                                %span.sort.icon.icon-arrow-up51.sort-desc.visible
                        -else
                          %a{href:"?sort_on=-created_on{% if search %}&search={{ search|escape }}{% endif %}"}
                            %div
                              -trans "Created On"
                              %span.sort.icon.icon-arrow-down-2.sort-desc

                  %tbody
                    - for object in contacts
                      %tr.contact.select-row.object-row{'data-uuid': '{{object.uuid}}', 'data-object-id':'{{object.id}}'}

                        - if org_perms.contacts.contact_update or org_perms.msgs.broadcast_send
                          %td.contact.checkbox.object-row-checkbox
                            .glyph.icon-checkbox-unchecked.contact-checkbox.object-row-checkbox.h-4.pl-3.w-4.cursor-pointer

                        %td.value-text.field_name
                          .px-4.py-2.whitespace-no-wrap
                            {{ object|name:user_org }}

                        %td.value-phone.field_phone
                          .px-4.py-2.whitespace-no-wrap
                            {{ object|urn:user_org }}

                        -for field in contact_fields
                          -if field.show_in_table
                            %td.field
                              .px-4.py-2
                                {{ object|contact_field:field.key }}

                        %td.value-received.field_received
                          .px-4.py-2.whitespace-no-wrap
                            {% format_datetime object.created_on %}

                        // This is needed for action buttons
                        %td.hide
                          .value-labels
                            %nobr
                              - for group in object.all_groups.all
                                - if group.group_type == 'U'
                                  %span.label.label-info.lbl{ data-id: '{{group.id}}'}
                                    %a{'href':'{% url "contacts.contact_filter" group.uuid %}'}
                                      {{group.name}}

                    -empty
                      %tr
                        %td{colspan:3}
                          -trans "No matching contacts."
                        -for field in contact_fields
                          -if field.show_in_table
                            %td.field
                        %td


              .flex.flex-col.mx-4.mt-3.mb-16
                .flex
                  .text-gray-700
                    -include "includes/results_count.html"
                  .flex-grow
                    -include "includes/pages.html"

                -if paginator.is_es_search and not page_obj.has_next_page and page_obj.number == paginator.num_pages and paginator.count > 10000
                  .text-gray-400.text-sm.self-end.mt-2
                    -trans "To view more than 10,000 search results, save it as a group."
              
          - else
            - include "contacts/empty_include.haml"

-block post-content
  - if org_perms.msgs.broadcast_send and not reply_disabled
    - include "msgs/msg_send_modal.haml"

  -if org_perms.contacts.contact_delete
    .contact-deletion.hide
      .title
        -trans "Delete Contacts"

      .body
        %p
          -trans "Are you sure you want to delete these contacts?"
        %p
          -trans "Once they are deleted, they will be gone forever. There is no way to undo this operation."

-block extra-style
  :css
    tr.contacts th a span.icon {
      visibility: hidden;
      text-decoration: none;
      font-size: 14px;
      margin-top: -1px;
    }
    tr.contacts th a {
      text-decoration: none;
      font-weight:500;
      color: #717171;
      font-size: 0.75rem;
    }
    tr.contacts th:hover a span.icon {
      visibility: visible;
      font-size: 14px;
    }
    tr.contacts th a span.icon.visible {
      visibility: visible;
    }
    tr.contacts th {
      padding: 8px 0px;
      padding-left:14px;
      font-weight:200;
      color: #aaa;
      border:0px solid;
      text-align:center;
      white-space: nowrap;
      border-bottom: 1px #eee solid;
    }

    td.field {
      text-align:center;
      min-width:125px;
    }

    .span9 .contact_list tr.contacts {
      border-top: none;
    }

    .span9 .object-list tbody td.value-text {
      min-width: 30px;
    }

    .modal .modal-body .control-group .control-label {
      display:none;
    }

    .search-error {
      color: #da4f49;
    }

    .pagination-notification {
      background: #ecf0f1;
      padding: 10px;
    }


-block extra-script
  {{ block.super }}

  :javascript

    function handleSendMessageClicked() {
      console.log("send message");
      // when we click send, include any clicked messages in our modax request
      var sendEndpoint = "{% url 'msgs.broadcast_send' %}";
      var sendButton = document.querySelector(".send-button");
      var sendModal = document.querySelector("#send-message-modal");
      var ids = getCheckedUuids();
      if (ids.length > 0) {
        sendModal.setAttribute("endpoint", sendEndpoint + '?c=' + ids);
      } else {
        sendModal.setAttribute("endpoint", sendEndpoint);
      }
    }

    function wireSendButton() {
    }

    $(document).on('click', '.search-query', function() {
      $(this).animate({ width: '600px'}, 200);
    });

    {% if org_perms.contacts.contact_create %}
    if($(location).attr('hash') == '#contact') {
      showCreateContactModal();
    }
    {% endif %}

    {% if org_perms.contacts.contactgroup_create %}
    if($(location).attr('hash') == '#group') {
      showCreateGroupModal();
    }
    {% endif %}


    // keeps track if we are on a link or not
    var onLink = false;

    {% if org_perms.contacts.contact_update %}

    function addContactToGroup(groupId){
      var contactIds = getCheckedIds();
      var groupedIds = getLabeledIds(groupId);

      var addGroup = true;

      // find the intersection of contactIds and groupedIds
      var contactIdsWithGroup = intersect(contactIds, groupedIds);

      // they all belong to the group, so we are actually removing these contacts from the group
      if (contactIdsWithGroup.length == contactIds.length){
        addGroup = false;
      }
      jQuery.ajaxSettings.traditional = true;
      fetchPJAXContent("", "#pjax", { postData: {objects: contactIds, label: groupId, add: addGroup, action: 'label', pjax: 'true'}, forceReload: true, onSucces: function(){console.log("you did it") }});
    }

    {% endif %}

    {% if org_perms.contacts.contact_create %}
    function showCreateContactModal() {
      var modal = new Modax('{{ _("Create Contact")|escapejs }}', '{% url "contacts.contact_create" %}')
      modal.setIcon('icon-user')
      modal.setListeners({
        onSuccess: function() {
          location.reload();
        }
      })
      modal.show()
    }
    {% endif %}

    {% if org_perms.contacts.contactgroup_create %}
    function showCreateGroupModal() {
      var modal = new Modax('{{ _("Create Contact Group")|escapejs }}','{% url "contacts.contactgroup_create" %}')
      modal.setIcon('icon-users')
      modal.setListeners({
        onSuccess: function() {
          location.reload();
        }
      })
      modal.show()
    }
    {% endif %}

    {% if org_perms.contacts.contact_delete %}
    $(".contacts-btn-delete").live('click', function() {
      modal = new ConfirmationModal($('.contact-deletion > .title').html(), $('.contact-deletion > .body').html());
      modal.addClass('alert');
      modal.setListeners({onPrimary: function(){
        runActionOnObjectRows("delete");
        modal.dismiss();
      }}, false);
      modal.setPrimaryButton('{{ _("Delete")|escapejs }}');
      modal.show();
    });
    {% endif %}

    {% if org_perms.contacts.contact_unblock %}
      $(".page-content").on('click', ".object-btn-unblock", function() {
	    runActionOnObjectRows("unblock");
      });
      $(".page-content").on('click', ".object-btn-block", function() {
	    runActionOnObjectRows("block");
      });
    {% endif %}

    {% if org_perms.contacts.contact_unstop %}
      $(".page-content").on('click', ".object-btn-unstop", function() {
	    runActionOnObjectRows("unstop");
      });
    {% endif %}

    $('.select-row').live('mouseover', function(){
      url = '/contact/read/' + $(this).data('uuid');

      $(this).find('td').not(':first-child').each(function(){
        $(this).attr('onClick', "document.location.href=url;");
      });
    });

    function handleCreateGroupModalLoaded(event) {
      lastChecked = getCheckedIds();
      var body = event.detail.body;
      body.querySelector("#id_preselected_contacts").value = lastChecked.join();
    }

    function handleCreateGroupModalSubmitted(event) {
      refresh(function() { recheckIds(); }, true);
    }

    function handleAddGroupClicked() {
      document.getElementById("create-group-modal").open = true;
    }

