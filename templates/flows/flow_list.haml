-extends "smartmin/list.html"
-load smartmin sms temba compress
-load i18n humanize

-block page-top

-block content

  -if org_perms.flows.flow_update
    %temba-modax#export-results{ header:'{% trans "Export Flow Results" %}' }
    %temba-modax#create-label-modal{ header:'{% trans "Create Label" %}', endpoint:"{% url 'flows.flowlabel_create' %}", onloaded: "handleCreateLabelModalLoaded", onsubmitted: "handleCreateLabelModalSubmitted"}

  -if not org_has_flows
    -include "flows/empty_include.html"
  -else
    .page-content
      #pjax
        -block pjax
          .lp-frame
            .left
              .flex.flex-col
                -if org_perms.flows.flow_create
                  .w-64.mr-5
                    %temba-modax#create-flow-modal{ header:'{% trans "Create Flow" %}', endpoint:"{% url 'flows.flow_create' %}" }
                      .button-primary
                        -trans "Create Flow"
              
              .lp-nav.upper
                -for folder in folders
                  .lp-nav-item{'class': '{% if folder.url == request_url %}font-normal{% endif %}' }
                    .name{onclick:"goto(event)", href:'{{folder.url}}'}
                      {{folder.label}}
                    .count{onclick:"goto(event)", href:'{{folder.url}}'}
                      {{ folder.count | intcomma }}

              -if campaigns
                .lp-nav.lower
                  .font-normal.uppercase.text-xs.text-gray-500.pb-1
                    -trans "Campaigns"
                  -for campaign in campaigns
                    .lp-nav-item{'class': '{%if current_campaign.id == campaign.campaign__id %}font-normal{% endif %}' }
                      .name{onclick:"goto(event)", href:'{% url "flows.flow_campaign" campaign.campaign__id %}'}
                        {{campaign.campaign__name}}
                      .count{onclick:"goto(event)", href:'{% url "flows.flow_campaign" campaign.campaign__id %}'}
                        {{ campaign.count | intcomma }}

              -if labels
                .lp-nav.lower

                  .inner-scroll
                    .font-normal.uppercase.text-xs.text-gray-500.pb-1
                      - trans "Labels"

                    -for label in labels
                      -if label.children
                        .lp-nav-item{ class:'{% if current_label.pk == label.pk %}font-normal{% endif %}' }
                          .name{onclick:"goto(event)", 'href':'{% url "flows.flow_filter" label.pk %}'}
                            {{ label.label }}
                          .count.-mr-1.text-gray-400
                            -if current_label.pk == label.pk or current_label.parent_id == label.pk
                              .glyph.icon-arrow-down-2{onclick:"goto(event)", 'href':'{% url "flows.flow_filter" label.pk %}'}
                            -else
                              .glyph.icon-arrow-right-8{onclick:"goto(event)", 'href':'{% url "flows.flow_filter" label.pk %}'}

                        -if current_label.pk == label.pk or current_label.parent_id == label.pk
                          .pl-2.mt-1.level2.font-light
                            -for child in label.children
                              .lp-nav-item{ class:'{% if current_label.pk == child.pk %}font-normal{% endif %}' }
                                .name{onclick:"goto(event)",  href:"{% url 'flows.flow_filter' child.pk %}" }
                                  {{ child.name }}
                                .count{onclick:"goto(event)", href:"{% url 'flows.flow_filter' child.pk %}" }
                                  {{ child.get_flows_count | intcomma }}
                    
                    -for label in labels
                      -if not label.children
                        .lp-nav-item{ class:'{% if current_label.pk == label.pk %}font-normal{% endif %}' }
                          .name{onclick:"goto(event)", href:"{% url 'flows.flow_filter' label.pk %}", class:'{% if current_label.pk == label.pk %}font-normal active{% endif %}' }
                            {{ label.label }} 
                          .count{onclick:"goto(event)", href:"{% url 'flows.flow_filter' label.pk %}", class:'{% if current_label.pk == label.pk %}font-normal active{% endif %}' }
                            {{ label.count | intcomma }}

              .flex-grow
                -if org_perms.flows.flowstart_list
                  .button-light.mt-3(onclick="goto(event)" href="{% url 'flows.flowstart_list' %}")
                    -trans "Flow Start Log"

                -if org_perms.api.webhookresult_list
                  .mt-3.button-light.mt-3(onclick="goto(event)" href="{% url 'api.webhookresult_list' %}")
                    -trans "Webhook Call Log"

            .right

              .flex.w-full.items-end.mb-4
                -block action-buttons
                  .action-buttons.list-buttons-container.h-full.mr-2.flex-grow
                    .list-buttons.flex.items-center.-mx-2.h-full
                      - if 'unlabel' in actions and org_perms.flows.flow_update
                        - if 'unlabel' in actions
                          .button-action.object-btn-unlabel
                            .glyph.icon-box
                            -trans "Remove Label"

                      - if 'restore' in actions and org_perms.flows.flow_update
                          .button-action.object-btn-restore
                            .-mt-1.mr-2.glyph.icon-checkmark
                            -trans "Activate"

                      - if 'archive' in actions and org_perms.flows.flow_update
                          .button-action.object-btn-archive
                            .-mt-1.mr-2.glyph.icon-box
                            -trans "Archive"

                      - if 'label' in actions and org_perms.flows.flow_update
                        %span.btn-group
                          .button-action.dropdown-toggle{data-toggle:"dropdown"}
                            .-mt-1.mr-2.glyph.icon-tag
                            -trans "Label"
                          
                          %ul.dropdown-menu.label-menu.rounded-lg.border-none.px-4.py-3
                            -for label in labels
                              -with label.children as children
                                -if children
                                  %li.dropdown-submenu
                                    .lbl-menu.object-btn-label{data-id:'{{label.pk}}'}
                                      .flex.items-center.py-1.linked
                                        .glyph.message-label
                                        .name
                                          = label.label
                                        .flex-grow.text-right
                                          .icon-arrow-right-8.text-2xl.-mt-1

                                    %ul.dropdown-menu.label-menu.rounded-lg.border-none.px-4.py-3
                                      -for child in children
                                        %li
                                          .lbl-menu.object-btn-label{data-id:'{{child.pk}}'}
                                            .flex.items-center.py-1.linked
                                              .glyph.message-label
                                              = child.name
                            
                            -for label in labels
                              -if not label.children
                                %li
                                  .lbl-menu.object-btn-label{data-id:'{{label.pk}}'}
                                    .flex.items-center.py-1.linked
                                      .glyph.message-label
                                      = label.label

                            -if org_perms.flows.flowlabel_create
                              -if labels
                                %li.separator.-mx-4.border-b.my-3
                              %li
                                .lbl-menu.add-label.linked{onclick:"handleAddLabelClicked()"}
                                  -trans "New Label"

                      .button-action.object-btn-export{onclick:'exportFlows()'}
                        .-mt-1.mr-2.glyph.icon-excel
                        -trans "Export Results"

                .flex-grow.page-title.text-3xl.text-gray-700.ml-2.items-center
                  -block title-text
                    .title.leading-tight
                      {{title}}
                .ml-4
                  -include "gear_links_include.haml"

              -if view.search_fields
                %form#search-form.mb-4{method:"get"}
                  %temba-textinput{onsubmit:'document.querySelector("#search-form").submit();', type:'text', placeholder:'{% trans "Search" %}', name:"search", value:"{{search}}"}
                  -if request.REQUEST.status
                    %input{type:'hidden', name:'status', value:'{{request.REQUEST.status}}'}

              -block flow-list
                %table.object-list{class: '{% if org_perms.flows.flow_update %}selectable{% endif %}'}
                  %tbody
                    -for object in object_list
                      %tr.flow.object-row.select-row{ data-object-uuid: "{{object.uuid}}", data-object-id: "{{ object.id }}" }
                        %td.flow.checkbox.object-row-checkbox
                          .glyph.icon-checkbox-unchecked.flow-checkbox.object-row-checkbox.pl-3.w-4.py-1.cursor-pointer{style:"height:16px"}

                        %td.w-full{onclick:"handleRowSelection(this)"}
                          .flex.flex-wrap.flex-end.items-center.px-4.py-2
                            .flex.flex-col
                              .flex.linked.inline
                                -if object.flow_type == 'V'
                                  .icon-phone.mr-2.leading-snug
                                -elif object.flow_type == 'S'
                                  .icon-mobile.mr-2.leading-snug
                                .name{onclick:"goto(event)", href:"{% url 'flows.flow_editor' object.uuid%}"}
                                  {{ object.name }}

                        %td{onclick:"handleRowSelection(this)"}
                          -if not object.is_archived
                            .whitespace-no-break.flex.items-center.px-4.flex-wrap
                              
                              -for label in object.labels.all
                                .lbl.cursor-pointer.m-1{ onclick:"goto(event)", data-id: '{{label.pk}}', href:"{% url 'flows.flow_filter' label.pk%}"}
                                  {{label.name}}

                        -if not object.run_stats.total
                          %td.value-status{onclick:"handleRowSelection(this)"}
                          %td.value-status.pr-4{onclick:"handleRowSelection(this)"}
                            -trans "No runs"

                        -else
                          %td.value-status.px-4{onclick:"handleRowSelection(this)"}
                            %a.href{href:'{% url "flows.flow_results" object.uuid %}'}
                              {% blocktrans with run_count=object.run_stats.total|intcomma count cc=object.run_stats.total %}
                                {{ run_count }} run
                              {% plural %}
                                {{run_count}} runs
                              {% endblocktrans %}

                          %td.value-status.pr-4{onclick:"handleRowSelection(this)"}
                            {% blocktrans with completed_percentage=object.run_stats.completion %}
                              {{ completed_percentage }}% completion
                            {% endblocktrans %}

                    -empty
                      %tr.flow
                        %td.flow
                          -trans "No matching flows."

                - block paginator
                  // - if object_list.count
                    .paginator
                      - include "smartmin/sidebar_pagination.haml"

-block extra-script
  {{ block.super }}

  :javascript

    {% if org_perms.flows.flow_update %}

      function handleAddLabelClicked() {
        document.getElementById("create-label-modal").open = true;
      }

      function handleCreateLabelModalLoaded(event) {
        lastChecked = getCheckedIds();
        var body = event.detail.body;
        body.querySelector("#id_flows").value = lastChecked.join();
      }

      function handleCreateLabelModalSubmitted(event) {
        refresh(function() { recheckIds(); }, true);
      }

      function exportFlows(){
        var endpoint = '{% url "flows.flow_export_results" %}';
        var modal = document.querySelector("#export-results");
        var ids = getCheckedIds();
        if (ids.length > 0) {
          modal.setAttribute("endpoint", endpoint + '?ids=' + ids);
        }
        modal.open = true;
      }
    {% endif %}
