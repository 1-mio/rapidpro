-extends "smartmin/list.html"
-load smartmin i18n contacts compress

-block page-title
  {{ title }}

-block page-top

-block extra-style
  {{block.super}}

  :css

    temba-select[name='ticket-filter'] {
      margin-bottom: 0.5em;
      margin-top: -1.3em;
    }

    .example {
      padding: 20px;
      border: 1px solid #e6e6e6;
      margin: 10px;
      border-radius: 3px;
    }

    .example-header {
      padding-bottom: 10px;
      font-size: 12px;
    }

    html {
      --color-text-dark: #555;
    }

    .ticket-list {
      flex-basis: 300px; 
      flex-grow: 0; 
      flex-shrink: 0;
      transition: all 200ms ease-in;
    }

    @media only screen and (max-width: 1024px) {
      .ticket-list {
        flex-basis: 200px; 
      }
    }

    @media only screen and (max-width: 768px) {
      .ticket-list {
        flex-basis: 125px; 
      }
    }

-block extra-script
  {{block.super}}
  :javascript
    function handleContactChanged(event) {
      var contact = event.target.value;
      var chat = document.querySelector("temba-contact-chat");
      chat.contact = contact;

      
    }
    
    function handleContactHistoryUpdated(event) {
      // tell our list to refresh since we know things happened
      var tickets = document.querySelector("temba-contacts");
      tickets.refresh();
    }

    function handleTicketsRefreshed(event) {
      // tell our chat to refresh since we know things are new in our list
      var chat = document.querySelector("temba-contact-chat");
      chat.refresh();
    }

    function handleFilterChanged(event) {
      var contacts = document.querySelector("temba-contacts");
      var chat = document.querySelector("temba-contact-chat");

      // if we have auto selecting, don't clear the chat
      if (!contacts.nextSelection) {
        chat.contact = null;
      }

      var filter = event.target.values[0].value;
      if (filter === "O") {
        contacts.endpoint = "/contact/tickets/?_format=json&folder=open"
      } else {
        contacts.endpoint = "/contact/tickets/?_format=json&folder=closed"
      }
    }

    function handleTicketUpdated(event) {
      var contact = event.detail.contact;
      var focus = event.detail.focus;

      var filter = document.querySelector('temba-select[name="ticket-filter"]');
      var contacts = document.querySelector("temba-contacts");

      if (focus) {
        contacts.setNextSelection(contact.uuid);
      } else {
        // no focus, just refresh
        contacts.refresh();
      }
    }

-block temba-store
  %temba-store(
    completions="/mr/docs/{{ LANGUAGE_CODE }}/completion.json"
    functions="/mr/docs/{{ LANGUAGE_CODE }}/functions.json"
    fields="/api/v2/fields.json"
    globals="/api/v2/globals.json"
    groups="/api/v2/groups.json")
      
-block page-container
  .flex-col
    .flex(style="height:100vh;margin-top:-121px;padding-top:121px;")
      .ticket-list.flex.flex-col.m-4.mr-2.pt-4
        %temba-select(name="ticket-filter" onchange="handleFilterChanged(event)")
          %temba-option(name="Open" value="O" icon="inbox")
          %temba-option(name="Closed" value="C" icon="check")
        
        .flex.flex-grow
          %temba-contacts(endpoint="/contact/tickets/?_format=json&folder=open" -temba-refreshed="handleTicketsRefreshed" onchange="handleContactChanged(event)")

      .flex-grow.flex-col.h-full.py-4.pb-4.pr-4
        %temba-contact-chat(-temba-refreshed="handleContactHistoryUpdated" -temba-content-changed="handleTicketUpdated")

-block footer